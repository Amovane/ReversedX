package main

type Relation int64

const (
	Follower Relation = iota
	Following
)

var ToString = map[Relation]string{
	Follower:  "followers",
	Following: "following",
}
var ToPath = map[Relation]string{
	Follower:  "3yX7xr2hKjcZYnXt6cU6lQ/Followers",
	Following: "t-BPOrMIduGUJWO_LxcvNQ/Following",
}

func (r Relation) String() string {
	return ToString[r]
}
func (r Relation) Path() string {
	return ToPath[r]
}

// Generated by https://quicktype.io

type Response struct {
	Data Data `json:"data"`
}

type Data struct {
	User UserClass `json:"user"`
}

type UserClass struct {
	Result UserResult `json:"result"`
}

type UserResult struct {
	Typename UserDisplayTypeEnum `json:"__typename"`
	Timeline ResultTimeline      `json:"timeline"`
}

type ResultTimeline struct {
	Timeline TimelineTimeline `json:"timeline"`
}

type TimelineTimeline struct {
	Instructions []Instruction `json:"instructions"`
}

type Instruction struct {
	Type      string  `json:"type"`
	Direction *string `json:"direction,omitempty"`
	Entries   []Entry `json:"entries"`
}

type Entry struct {
	EntryID   string  `json:"entryId"`
	SortIndex string  `json:"sortIndex"`
	Content   Content `json:"content"`
}

type Content struct {
	EntryType       EntryTypeEnum    `json:"entryType"`
	Typename        EntryTypeEnum    `json:"__typename"`
	ItemContent     *ItemContent     `json:"itemContent,omitempty"`
	ClientEventInfo *ClientEventInfo `json:"clientEventInfo,omitempty"`
	Value           *string          `json:"value,omitempty"`
	CursorType      *string          `json:"cursorType,omitempty"`
}

type ClientEventInfo struct {
	Component Component `json:"component"`
	Element   Element   `json:"element"`
}

type ItemContent struct {
	ItemType        ItemTypeEnum        `json:"itemType"`
	Typename        ItemTypeEnum        `json:"__typename"`
	UserResults     UserResults         `json:"user_results"`
	UserDisplayType UserDisplayTypeEnum `json:"userDisplayType"`
}

type UserResults struct {
	Result UserResultsResult `json:"result"`
}

type UserResultsResult struct {
	Typename                   UserDisplayTypeEnum        `json:"__typename"`
	ID                         string                     `json:"id"`
	RESTID                     string                     `json:"rest_id"`
	AffiliatesHighlightedLabel AffiliatesHighlightedLabel `json:"affiliates_highlighted_label"`
	HasGraduatedAccess         bool                       `json:"has_graduated_access"`
	IsBlueVerified             bool                       `json:"is_blue_verified"`
	ProfileImageShape          ProfileImageShape          `json:"profile_image_shape"`
	Legacy                     Legacy                     `json:"legacy"`
	Professional               *Professional              `json:"professional,omitempty"`
}

type AffiliatesHighlightedLabel struct {
}

type Legacy struct {
	FollowedBy              bool           `json:"followed_by"`
	CanDm                   bool           `json:"can_dm"`
	CanMediaTag             bool           `json:"can_media_tag"`
	CreatedAt               string         `json:"created_at"`
	DefaultProfile          bool           `json:"default_profile"`
	DefaultProfileImage     bool           `json:"default_profile_image"`
	Description             string         `json:"description"`
	Entities                Entities       `json:"entities"`
	FastFollowersCount      int64          `json:"fast_followers_count"`
	FavouritesCount         int64          `json:"favourites_count"`
	FollowersCount          int64          `json:"followers_count"`
	FriendsCount            int64          `json:"friends_count"`
	HasCustomTimelines      bool           `json:"has_custom_timelines"`
	IsTranslator            bool           `json:"is_translator"`
	ListedCount             int64          `json:"listed_count"`
	Location                string         `json:"location"`
	MediaCount              int64          `json:"media_count"`
	Name                    string         `json:"name"`
	NormalFollowersCount    int64          `json:"normal_followers_count"`
	PinnedTweetIDSStr       []string       `json:"pinned_tweet_ids_str"`
	PossiblySensitive       bool           `json:"possibly_sensitive"`
	ProfileBannerURL        *string        `json:"profile_banner_url,omitempty"`
	ProfileImageURLHTTPS    string         `json:"profile_image_url_https"`
	ProfileInterstitialType string         `json:"profile_interstitial_type"`
	ScreenName              string         `json:"screen_name"`
	StatusesCount           int64          `json:"statuses_count"`
	TranslatorType          TranslatorType `json:"translator_type"`
	Verified                bool           `json:"verified"`
	WantRetweets            bool           `json:"want_retweets"`
	WithheldInCountries     []interface{}  `json:"withheld_in_countries"`
	URL                     *string        `json:"url,omitempty"`
	Following               *bool          `json:"following,omitempty"`
}

type Entities struct {
	Description Description  `json:"description"`
	URL         *Description `json:"url,omitempty"`
}

type Description struct {
	Urls []URL `json:"urls"`
}

type URL struct {
	DisplayURL  string  `json:"display_url"`
	ExpandedURL string  `json:"expanded_url"`
	URL         string  `json:"url"`
	Indices     []int64 `json:"indices"`
}

type Professional struct {
	RESTID           string     `json:"rest_id"`
	ProfessionalType string     `json:"professional_type"`
	Category         []Category `json:"category"`
}

type Category struct {
	ID       int64  `json:"id"`
	Name     string `json:"name"`
	IconName string `json:"icon_name"`
}

type Component string

const (
	FollowersSgs Component = "FollowersSgs"
)

type Element string

const (
	ElementUser Element = "user"
)

type EntryTypeEnum string

const (
	TimelineTimelineCursor EntryTypeEnum = "TimelineTimelineCursor"
	TimelineTimelineItem   EntryTypeEnum = "TimelineTimelineItem"
)

type ItemTypeEnum string

const (
	TimelineUser ItemTypeEnum = "TimelineUser"
)

type UserDisplayTypeEnum string

const (
	User UserDisplayTypeEnum = "User"
)

type TranslatorType string

const (
	None TranslatorType = "none"
)

type ProfileImageShape string

const (
	Circle ProfileImageShape = "Circle"
)
